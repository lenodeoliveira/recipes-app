{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\n\nfunction useCopyToClipboard(resetTime = null) {\n  const [isCopied, setCopied] = useState(false);\n\n  const handleCopy = pathname => {\n    copy(`http://localhost:3000${pathname}`);\n    setCopied(true);\n  };\n\n  useEffect(() => {\n    let timeoutID;\n\n    if (isCopied && resetTime) {\n      timeoutID = setTimeout(() => setCopied(false), resetTime);\n    }\n\n    return () => {\n      clearTimeout(timeoutID);\n    };\n  }, [isCopied, resetTime]);\n  return [isCopied, handleCopy];\n}\n\nexport default useCopyToClipboard;","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/projeto-recipes-app/src/Hooks/useCopyToClipboard.js"],"names":["useState","useEffect","copy","useCopyToClipboard","resetTime","isCopied","setCopied","handleCopy","pathname","timeoutID","setTimeout","clearTimeout"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;;AAEA,SAASC,kBAAT,CAA4BC,SAAS,GAAG,IAAxC,EAA8C;AAC5C,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMO,UAAU,GAAIC,QAAD,IAAc;AAC/BN,IAAAA,IAAI,CAAE,wBAAuBM,QAAS,EAAlC,CAAJ;AACAF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHD;;AAKAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,SAAJ;;AAEA,QAAIJ,QAAQ,IAAID,SAAhB,EAA2B;AACzBK,MAAAA,SAAS,GAAGC,UAAU,CAAC,MAAMJ,SAAS,CAAC,KAAD,CAAhB,EAAyBF,SAAzB,CAAtB;AACD;;AAED,WAAO,MAAM;AACXO,MAAAA,YAAY,CAACF,SAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACJ,QAAD,EAAWD,SAAX,CAVM,CAAT;AAYA,SAAO,CAACC,QAAD,EAAWE,UAAX,CAAP;AACD;;AAED,eAAeJ,kBAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport copy from 'clipboard-copy';\n\nfunction useCopyToClipboard(resetTime = null) {\n  const [isCopied, setCopied] = useState(false);\n\n  const handleCopy = (pathname) => {\n    copy(`http://localhost:3000${pathname}`);\n    setCopied(true);\n  };\n\n  useEffect(() => {\n    let timeoutID;\n\n    if (isCopied && resetTime) {\n      timeoutID = setTimeout(() => setCopied(false), resetTime);\n    }\n\n    return () => {\n      clearTimeout(timeoutID);\n    };\n  }, [isCopied, resetTime]);\n\n  return [isCopied, handleCopy];\n}\n\nexport default useCopyToClipboard;\n"]},"metadata":{},"sourceType":"module"}