{"ast":null,"code":"var _jsxFileName = \"/home/lennon/Documentos/Programa\\xE7\\xE3o/APP-RECEITAS/projeto-recipes-app/src/Components/DetailScreen/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchAllCocktails, singleCocktail } from '../../API/apiCocktails';\nimport { fetchAllRecipes, singleMeal } from '../../API/apiMeals';\nimport { checkComplete, checkFavorite, checkProgress } from '../../helper/checkHelper';\nimport useCopyToClipboard from '../../Hooks/useCopyToClipboard';\nimport RecomendationCard from '../RecomedationCard';\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../../images/whiteHeartIcon.svg\";\nimport './style.css';\n\nconst DetailScreen = props => {\n  const TIME = 5000;\n  const {\n    page,\n    id\n  } = props;\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n  const [recommendation, setRecomendation] = useState([]);\n  const [copied, setCopied] = useCopyToClipboard(TIME);\n  const [favorite, setFavorite] = useState(false);\n\n  const resolveFetch = resolve => {\n    setRecipe(resolve);\n    setIngredients(resolve.ingredients);\n    setMeasure(resolve.measurements);\n  };\n\n  useEffect(() => {\n    if (page === 'comidas') {\n      singleMeal(id).then(resolveFetch);\n      fetchAllCocktails('', '', 's').then(resolve => setRecomendation(resolve));\n    } else {\n      singleCocktail(id).then(resolveFetch);\n      fetchAllRecipes('', '', 's').then(resolve => setRecomendation(resolve));\n    }\n  }, [page, id]);\n  useEffect(() => {\n    setFavorite(checkFavorite(id));\n  }, [id]);\n\n  const recommendationMount = arrRecommendation => {\n    const arrTemp = arrRecommendation || [];\n    const maxSize = 6;\n    const minSize = 0;\n    const keyObject = page === 'comidas' ? 'Drink' : 'Meal';\n    const pageRec = page === 'comidas' ? 'bebidas' : 'comidas';\n    return /*#__PURE__*/React.createElement(React.Fragment, null, arrTemp.slice(minSize, maxSize).map((elem, index) => /*#__PURE__*/React.createElement(RecomendationCard, {\n      key: elem[`str${keyObject}`],\n      thumb: elem[`str${keyObject}Thumb`],\n      foodName: elem[`str${keyObject}`],\n      index: index,\n      page: pageRec,\n      idFood: elem[`id${keyObject}`],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  const startRecipe = () => {\n    if (checkComplete(id)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/${page}/${id}/in-progress`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-start\",\n      \"data-testid\": \"start-recipe-btn\",\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, checkProgress(id, page)));\n  };\n\n  const favoriteIcon = fav => {\n    const favReturn = fav ? /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"favorite-btn\",\n      src: blackHeartIcon,\n      alt: \"blackHeart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }) : /*#__PURE__*/React.createElement(\"img\", {\n      \"data-testid\": \"favorite-btn\",\n      src: whiteHeartIcon,\n      alt: \"whiteHeart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    });\n    return favReturn;\n  };\n\n  const favoriteBtn = () => {\n    const objRecipe = {\n      id,\n      type: recipe.typeRecipe,\n      area: recipe.areaRecipe,\n      category: recipe.categoryRecipe,\n      alcoholicOrNot: recipe.alcoholic,\n      name: recipe.nameRecipe,\n      image: recipe.imgRecipe\n    };\n    const stringFavorite = localStorage.getItem('favoriteRecipes');\n    const jsonFavorite = stringFavorite !== null ? JSON.parse(stringFavorite) : [];\n    const allValue = [...jsonFavorite, objRecipe];\n    const stringRecipe = JSON.stringify(allValue);\n    localStorage.setItem('favoriteRecipes', stringRecipe);\n    setFavorite(!favorite);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-int\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"image-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: recipe.imgRecipe,\n    alt: \"\",\n    width: \"200px\",\n    \"data-testid\": \"recipe-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-title\",\n    className: \"title-recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, recipe.nameRecipe), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"share-button\",\n    \"data-testid\": \"share-btn\",\n    onClick: () => setCopied(`/${page}/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }, copied ? 'Link copiado!' : 'Compartilhar'), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: favoriteBtn,\n    className: \"share-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, favoriteIcon(favorite)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"recipe-category\",\n    className: \"ingredient-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, `${recipe.categoryRecipe} - ${recipe.alcoholic}`), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, ingredients.map((elem, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: elem,\n    \"data-testid\": `${index}-ingredient-name-and-measure`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, `${elem} - ${measure[index]}`))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"instruction-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, \"Instruction\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": \"instructions\",\n    className: \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, recipe.instructionRecipe), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"video\",\n    \"data-testid\": \"video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-cards-carrousel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, recommendationMount(recommendation)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, startRecipe()));\n};\n\nexport default DetailScreen;\nDetailScreen.propTypes = {\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/projeto-recipes-app/src/Components/DetailScreen/index.jsx"],"names":["React","useEffect","useState","Link","PropTypes","fetchAllCocktails","singleCocktail","fetchAllRecipes","singleMeal","checkComplete","checkFavorite","checkProgress","useCopyToClipboard","RecomendationCard","DetailScreen","props","TIME","page","id","recipe","setRecipe","ingredients","setIngredients","measure","setMeasure","recommendation","setRecomendation","copied","setCopied","favorite","setFavorite","resolveFetch","resolve","measurements","then","recommendationMount","arrRecommendation","arrTemp","maxSize","minSize","keyObject","pageRec","slice","map","elem","index","startRecipe","favoriteIcon","fav","favReturn","blackHeartIcon","whiteHeartIcon","favoriteBtn","objRecipe","type","typeRecipe","area","areaRecipe","category","categoryRecipe","alcoholicOrNot","alcoholic","name","nameRecipe","image","imgRecipe","stringFavorite","localStorage","getItem","jsonFavorite","JSON","parse","allValue","stringRecipe","stringify","setItem","instructionRecipe","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchAllCocktails, singleCocktail } from '../../API/apiCocktails';\nimport { fetchAllRecipes, singleMeal } from '../../API/apiMeals';\nimport {\n  checkComplete,\n  checkFavorite,\n  checkProgress,\n} from '../../helper/checkHelper';\nimport useCopyToClipboard from '../../Hooks/useCopyToClipboard';\nimport RecomendationCard from '../RecomedationCard';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../../images/whiteHeartIcon.svg';\nimport './style.css';\n\nconst DetailScreen = (props) => {\n  const TIME = 5000;\n  const { page, id } = props;\n  const [recipe, setRecipe] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n  const [measure, setMeasure] = useState([]);\n  const [recommendation, setRecomendation] = useState([]);\n  const [copied, setCopied] = useCopyToClipboard(TIME);\n  const [favorite, setFavorite] = useState(false);\n\n  const resolveFetch = (resolve) => {\n    setRecipe(resolve);\n    setIngredients(resolve.ingredients);\n    setMeasure(resolve.measurements);\n  };\n\n  useEffect(() => {\n    if (page === 'comidas') {\n      singleMeal(id).then(resolveFetch);\n      fetchAllCocktails('', '', 's').then((resolve) => setRecomendation(resolve));\n    } else {\n      singleCocktail(id).then(resolveFetch);\n      fetchAllRecipes('', '', 's').then((resolve) => setRecomendation(resolve));\n    }\n  }, [page, id]);\n\n  useEffect(() => {\n    setFavorite(checkFavorite(id));\n  }, [id]);\n\n  const recommendationMount = (arrRecommendation) => {\n    const arrTemp = arrRecommendation || [];\n    const maxSize = 6;\n    const minSize = 0;\n    const keyObject = page === 'comidas' ? 'Drink' : 'Meal';\n    const pageRec = page === 'comidas' ? 'bebidas' : 'comidas';\n    return (\n      <>\n        {arrTemp.slice(minSize, maxSize).map((elem, index) => (\n          <RecomendationCard\n            key={ elem[`str${keyObject}`] }\n            thumb={ elem[`str${keyObject}Thumb`] }\n            foodName={ elem[`str${keyObject}`] }\n            index={ index }\n            page={ pageRec }\n            idFood={ elem[`id${keyObject}`] }\n          />\n        ))}\n      </>\n    );\n  };\n\n  const startRecipe = () => {\n    if (checkComplete(id)) {\n      return null;\n    }\n    return (\n      <Link to={ `/${page}/${id}/in-progress` }>\n        <button\n          className=\"btn-start\"\n          data-testid=\"start-recipe-btn\"\n          type=\"button\"\n        >\n          {checkProgress(id, page)}\n        </button>\n      </Link>\n    );\n  };\n\n  const favoriteIcon = (fav) => {\n    const favReturn = fav ? (\n      <img data-testid=\"favorite-btn\" src={ blackHeartIcon } alt=\"blackHeart\" />\n    ) : (\n      <img data-testid=\"favorite-btn\" src={ whiteHeartIcon } alt=\"whiteHeart\" />\n    );\n    return favReturn;\n  };\n\n  const favoriteBtn = () => {\n    const objRecipe = {\n      id,\n      type: recipe.typeRecipe,\n      area: recipe.areaRecipe,\n      category: recipe.categoryRecipe,\n      alcoholicOrNot: recipe.alcoholic,\n      name: recipe.nameRecipe,\n      image: recipe.imgRecipe,\n    };\n    const stringFavorite = localStorage.getItem('favoriteRecipes');\n    const jsonFavorite = stringFavorite !== null ? JSON.parse(stringFavorite) : [];\n    const allValue = [...jsonFavorite, objRecipe];\n    const stringRecipe = JSON.stringify(allValue);\n    localStorage.setItem('favoriteRecipes', stringRecipe);\n    setFavorite(!favorite);\n  };\n\n  return (\n    <div className=\"container-int\">\n      <div className=\"image-container\">\n        <img\n          src={ recipe.imgRecipe }\n          alt=\"\"\n          width=\"200px\"\n          data-testid=\"recipe-photo\"\n        />\n      </div>\n      <p data-testid=\"recipe-title\" className=\"title-recipe\">\n        {recipe.nameRecipe}\n      </p>\n      <button\n        type=\"button\"\n        className=\"share-button\"\n        data-testid=\"share-btn\"\n        onClick={ () => setCopied(`/${page}/${id}`) }\n      >\n        {copied ? 'Link copiado!' : 'Compartilhar'}\n      </button>\n      <button type=\"button\" onClick={ favoriteBtn } className=\"share-button\">\n        {favoriteIcon(favorite)}\n      </button>\n      <p data-testid=\"recipe-category\" className=\"ingredient-title\">\n        {`${recipe.categoryRecipe} - ${recipe.alcoholic}`}\n      </p>\n      <ul>\n        {ingredients.map((elem, index) => (\n          <li key={ elem } data-testid={ `${index}-ingredient-name-and-measure` }>\n            {`${elem} - ${measure[index]}`}\n          </li>\n        ))}\n      </ul>\n      <h4 className=\"instruction-title\">Instruction</h4>\n      <p data-testid=\"instructions\" className=\"instructions\">\n        {recipe.instructionRecipe}\n      </p>\n      <div className=\"container-video\">\n        <div className=\"video\" data-testid=\"video\" />\n      </div>\n      <div className=\"container-cards-carrousel\">\n        {recommendationMount(recommendation)}\n      </div>\n      <div className=\"container-button\">{startRecipe()}</div>\n    </div>\n  );\n};\n\nexport default DetailScreen;\n\nDetailScreen.propTypes = {\n  page: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}