{"ast":null,"code":"var _jsxFileName = \"/home/lennon/Documentos/Programa\\xE7\\xE3o/APP-RECEITAS/projeto-recipes-app/src/Components/FavoritesRecipes/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useCopyToClipboard from '../../Hooks/useCopyToClipboard';\nimport shareIcon from \"../../images/shareIcon.svg\";\nimport blackHeartIcon from \"../../images/blackHeartIcon.svg\";\nimport './FavoriteRecipe.css';\n\nconst FavoritesRecipes = () => {\n  const timeoutTextCopy = 3000;\n  const [isCopied, handleCopy] = useCopyToClipboard(timeoutTextCopy);\n  const [favoriteRecipes, setFavoriteRecipe] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) {\n      return;\n    }\n\n    setFavoriteRecipe(JSON.parse(localStorage.favoriteRecipes));\n    setIsLoading(false);\n  }, []);\n\n  const handleClick = index => {\n    const newFavoriteRecipes = [...favoriteRecipes];\n    newFavoriteRecipes.splice(index, 1);\n    setFavoriteRecipe(newFavoriteRecipes);\n    localStorage.favoriteRecipes = JSON.stringify(newFavoriteRecipes);\n  };\n\n  const filterRecipes = ({\n    innerText\n  }) => {\n    if (innerText === 'Food') {\n      const newFavorite = favoriteRecipes.filter(favorite => favorite.type === 'comida');\n      setFavoriteRecipe(newFavorite);\n    } else if (innerText === 'Drinks') {\n      const newFavorite = favoriteRecipes.filter(favorite => favorite.type === 'bebida');\n      setFavoriteRecipe(newFavorite);\n    } else {\n      setFavoriteRecipe(JSON.parse(localStorage.favoriteRecipes));\n    }\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-all-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-food-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"Food\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"filter-by-drink-btn\",\n    onClick: ({\n      target\n    }) => {\n      filterRecipes(target);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Drinks\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, favoriteRecipes.map(({\n    id,\n    type,\n    image,\n    alcoholicOrNot,\n    name,\n    area,\n    category\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"receipe-img\",\n    \"data-testid\": `${index}-horizontal-image`,\n    src: image,\n    alt: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), type === 'comida' ? /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, `${area} - ${category}`) : /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, alcoholicOrNot), /*#__PURE__*/React.createElement(Link, {\n    to: `/${type}s/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${index}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"button\", {\n    \"data-testid\": \"share-btn\",\n    type: \"button\",\n    onClick: () => handleCopy(`/${type}s/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: shareIcon,\n    alt: \"Compatilhar Receita\",\n    \"data-testid\": `${index}-horizontal-share-btn`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), isCopied ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 28\n    }\n  }, \"Link copiado!\") : true, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      handleClick(index);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-horizontal-favorite-btn`,\n    src: blackHeartIcon,\n    alt: \"Bot\\xE3o de Favorito\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default FavoritesRecipes;","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/projeto-recipes-app/src/Components/FavoritesRecipes/index.jsx"],"names":["React","useState","useEffect","Link","useCopyToClipboard","FavoritesRecipes","timeoutTextCopy","isCopied","handleCopy","favoriteRecipes","setFavoriteRecipe","isLoading","setIsLoading","localStorage","JSON","parse","handleClick","index","newFavoriteRecipes","splice","stringify","filterRecipes","innerText","newFavorite","filter","favorite","type","target","map","id","image","alcoholicOrNot","name","area","category","shareIcon","blackHeartIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport useCopyToClipboard from '../../Hooks/useCopyToClipboard';\nimport shareIcon from '../../images/shareIcon.svg';\nimport blackHeartIcon from '../../images/blackHeartIcon.svg';\nimport './FavoriteRecipe.css';\n\nconst FavoritesRecipes = () => {\n  const timeoutTextCopy = 3000;\n  const [isCopied, handleCopy] = useCopyToClipboard(timeoutTextCopy);\n  const [favoriteRecipes, setFavoriteRecipe] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!localStorage.favoriteRecipes) {\n      return;\n    }\n    setFavoriteRecipe(JSON.parse(localStorage.favoriteRecipes));\n    setIsLoading(false);\n  }, []);\n\n  const handleClick = (index) => {\n    const newFavoriteRecipes = [...favoriteRecipes];\n    newFavoriteRecipes.splice(index, 1);\n    setFavoriteRecipe(newFavoriteRecipes);\n    localStorage.favoriteRecipes = JSON.stringify(newFavoriteRecipes);\n  };\n\n  const filterRecipes = ({ innerText }) => {\n    if (innerText === 'Food') {\n      const newFavorite = favoriteRecipes.filter((favorite) => (\n        favorite.type === 'comida'\n      ));\n      setFavoriteRecipe(newFavorite);\n    } else if (innerText === 'Drinks') {\n      const newFavorite = favoriteRecipes.filter((favorite) => (\n        favorite.type === 'bebida'\n      ));\n      setFavoriteRecipe(newFavorite);\n    } else {\n      setFavoriteRecipe(JSON.parse(localStorage.favoriteRecipes));\n    }\n  };\n  if (isLoading) {\n    return <h1>Loading...</h1>;\n  }\n  return (\n    <div className=\"container-buttons\">\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-all-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        All\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-food-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        Food\n      </button>\n      <button\n        type=\"button\"\n        data-testid=\"filter-by-drink-btn\"\n        onClick={ ({ target }) => { filterRecipes(target); } }\n      >\n        Drinks\n      </button>\n      <div>\n        { favoriteRecipes\n          .map((\n            {\n              id,\n              type,\n              image,\n              alcoholicOrNot,\n              name,\n              area,\n              category,\n            },\n            index,\n          ) => (\n            <div\n              key={ index }\n            >\n              <Link to={ `/${type}s/${id}` }>\n                <img\n                  className=\"receipe-img\"\n                  data-testid={ `${index}-horizontal-image` }\n                  src={ image }\n                  alt={ name }\n                />\n              </Link>\n              {\n                (type === 'comida')\n                  ? (\n                    <p\n                      data-testid={ `${index}-horizontal-top-text` }\n                    >\n                      { `${area} - ${category}` }\n                    </p>)\n                  : (\n                    <p data-testid={ `${index}-horizontal-top-text` }>\n                      { alcoholicOrNot }\n                    </p>)\n              }\n              <Link to={ `/${type}s/${id}` }>\n                <p\n                  data-testid={ `${index}-horizontal-name` }\n                >\n                  { name }\n                </p>\n              </Link>\n              <button\n                data-testid=\"share-btn\"\n                type=\"button\"\n                onClick={ () => handleCopy(`/${type}s/${id}`) }\n              >\n                <img\n                  src={ shareIcon }\n                  alt=\"Compatilhar Receita\"\n                  data-testid={ `${index}-horizontal-share-btn` }\n                />\n              </button>\n              { isCopied ? <p>Link copiado!</p> : true }\n              <button\n                type=\"button\"\n                onClick={ () => { handleClick(index); } }\n              >\n                <img\n                  data-testid={ `${index}-horizontal-favorite-btn` }\n                  src={ blackHeartIcon }\n                  alt=\"Botão de Favorito\"\n                />\n              </button>\n            </div>\n          )) }\n      </div>\n    </div>\n  );\n};\n\nexport default FavoritesRecipes;\n"]},"metadata":{},"sourceType":"module"}