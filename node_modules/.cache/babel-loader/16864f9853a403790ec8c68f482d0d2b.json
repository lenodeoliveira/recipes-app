{"ast":null,"code":"var _jsxFileName = \"/home/lennon/Documentos/Programa\\xE7\\xE3o/APP-RECEITAS/sd-07-project-recipes-app/src/Components/CardComplete/index.jsx\";\nimport React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes, { string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from \"../../images/shareIcon.svg\";\n\nconst CardComplete = props => {\n  const {\n    num,\n    img,\n    category,\n    nameRecipe,\n    date,\n    tags,\n    area,\n    alcoholicOrNot,\n    type,\n    id\n  } = props;\n  const typeRecipe = type === 'comida' ? 'comidas' : 'bebidas';\n  const limitTags = 2;\n  const initArr = 0;\n  const firstTags = tags.slice(initArr, limitTags);\n  const [copyBtn, setCopyBtn] = useState('Compartilhar');\n\n  const copyLink = () => {\n    setCopyBtn('Link copiado!');\n    return `http://localhost:3000/${typeRecipe}/${id}`;\n  };\n\n  const areaFormat = area !== '' ? `${area} -` : '';\n  const alcoholicFormat = alcoholicOrNot !== '' ? `- ${alcoholicOrNot}` : '';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${typeRecipe}/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    alt: nameRecipe,\n    width: \"200\",\n    \"data-testid\": `${num}-horizontal-image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${num}-horizontal-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, nameRecipe)), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${num}-horizontal-top-text`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, `${areaFormat} ${category} ${alcoholicFormat}`), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-testid\": `${num}-horizontal-done-date`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, date), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": `${num}-horizontal-share-btn`,\n    src: shareIcon,\n    onClick: () => copy(copyLink()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, copyBtn), firstTags.map(elem => /*#__PURE__*/React.createElement(\"p\", {\n    key: elem + nameRecipe,\n    \"data-testid\": `${num}-${elem}-horizontal-tag`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, elem)));\n};\n\nexport default CardComplete;\nCardComplete.propTypes = {\n  num: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  nameRecipe: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(string).isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/sd-07-project-recipes-app/src/Components/CardComplete/index.jsx"],"names":["React","useState","copy","PropTypes","string","Link","CardComplete","props","num","img","category","nameRecipe","date","tags","area","alcoholicOrNot","type","id","typeRecipe","limitTags","initArr","firstTags","slice","copyBtn","setCopyBtn","copyLink","areaFormat","alcoholicFormat","shareIcon","map","elem","propTypes","isRequired","arrayOf"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport copy from 'clipboard-copy';\nimport PropTypes, { string } from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport shareIcon from '../../images/shareIcon.svg';\n\nconst CardComplete = (props) => {\n  const {\n    num,\n    img,\n    category,\n    nameRecipe,\n    date,\n    tags,\n    area,\n    alcoholicOrNot,\n    type,\n    id,\n  } = props;\n  const typeRecipe = type === 'comida' ? 'comidas' : 'bebidas';\n  const limitTags = 2;\n  const initArr = 0;\n  const firstTags = tags.slice(initArr, limitTags);\n\n  const [copyBtn, setCopyBtn] = useState('Compartilhar');\n\n  const copyLink = () => {\n    setCopyBtn('Link copiado!');\n    return `http://localhost:3000/${typeRecipe}/${id}`;\n  };\n\n  const areaFormat = area !== '' ? `${area} -` : '';\n  const alcoholicFormat = alcoholicOrNot !== '' ? `- ${alcoholicOrNot}` : '';\n\n  return (\n    <div>\n      <Link to={ `/${typeRecipe}/${id}` }>\n        <img\n          src={ img }\n          alt={ nameRecipe }\n          width=\"200\"\n          data-testid={ `${num}-horizontal-image` }\n        />\n        <p data-testid={ `${num}-horizontal-name` }>{nameRecipe}</p>\n      </Link>\n      <p\n        data-testid={ `${num}-horizontal-top-text` }\n      >\n        {`${areaFormat} ${category} ${alcoholicFormat}`}\n\n      </p>\n\n      <p data-testid={ `${num}-horizontal-done-date` }>{date}</p>\n      <button\n        type=\"button\"\n        data-testid={ `${num}-horizontal-share-btn` }\n        src={ shareIcon }\n        onClick={ () => copy(copyLink()) }\n      >\n        {copyBtn}\n      </button>\n      {firstTags.map((elem) => (\n        <p\n          key={ elem + nameRecipe }\n          data-testid={ `${num}-${elem}-horizontal-tag` }\n        >\n          {elem}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default CardComplete;\n\nCardComplete.propTypes = {\n  num: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  nameRecipe: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  tags: PropTypes.arrayOf(string).isRequired,\n  area: PropTypes.string.isRequired,\n  alcoholicOrNot: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}