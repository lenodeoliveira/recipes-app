{"ast":null,"code":"const start = 0;\nconst end = 12;\nexport const fetchAllRecipes = async (searcher = '', category = '', type) => {\n  const URL_BASE = type === 'i' ? 'https://www.themealdb.com/api/json/v1/1/filter.php?' : 'https://www.themealdb.com/api/json/v1/1/search.php?';\n  const URL_ALL = `${URL_BASE}${type}=${searcher}`;\n  const URL_CATEGORY = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n  const URL = category === '' ? URL_ALL : URL_CATEGORY;\n  const resolve = await fetch(URL);\n  const resolveJson = await resolve.json();\n\n  if (!resolveJson.meals) {\n    return [];\n  }\n\n  const limitArray = resolveJson.meals.slice(start, end);\n  return limitArray;\n};\nexport const fetchCategoriesMeals = async () => {\n  const sizeInit = 0;\n  const sizeEnd = 5;\n  const URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const resolve = await fetch(URL);\n  const resolveJson = await resolve.json();\n  const limitArray = resolveJson.meals.slice(sizeInit, sizeEnd);\n  return limitArray;\n};\nexport const singleMeal = async idMeal => {\n  const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idMeal}`;\n  const resolve = await fetch(URL);\n  const resolveJson = await resolve.json();\n  const tags = resolveJson.meals[0].strTags === null ? [] : resolveJson.meals[0].strTags.split(',');\n  const objectModel = {\n    idRecipe: resolveJson.meals[0].idMeal,\n    nameRecipe: resolveJson.meals[0].strMeal,\n    imgRecipe: resolveJson.meals[0].strMealThumb,\n    instructionRecipe: resolveJson.meals[0].strInstructions,\n    categoryRecipe: resolveJson.meals[0].strCategory,\n    ingredients: [],\n    measurements: [],\n    quantityIngredients: 0,\n    areaRecipe: resolveJson.meals[0].strArea,\n    typeRecipe: 'comida',\n    alcoholic: '',\n    tagRecipe: tags\n  };\n  const arrayObject = Object.entries(resolveJson.meals[0]);\n  const arrayIngredients = arrayObject.filter(elem => elem[0].includes('strIngredient') && elem[1] !== '' && elem[1] !== ' ' && elem[1] !== null);\n  const arrayMeasurements = arrayObject.filter(elem => elem[0].includes('strMeasure'));\n  const SIZE = arrayIngredients.length;\n  objectModel.ingredients = arrayIngredients.slice(start, SIZE).map(elem => [elem[1], false]);\n  objectModel.measurements = arrayMeasurements.slice(start, SIZE).map(elem => elem[1]);\n  objectModel.quantityIngredients = SIZE;\n  return objectModel;\n};","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/sd-07-project-recipes-app/src/API/apiMeals.js"],"names":["start","end","fetchAllRecipes","searcher","category","type","URL_BASE","URL_ALL","URL_CATEGORY","URL","resolve","fetch","resolveJson","json","meals","limitArray","slice","fetchCategoriesMeals","sizeInit","sizeEnd","singleMeal","idMeal","tags","strTags","split","objectModel","idRecipe","nameRecipe","strMeal","imgRecipe","strMealThumb","instructionRecipe","strInstructions","categoryRecipe","strCategory","ingredients","measurements","quantityIngredients","areaRecipe","strArea","typeRecipe","alcoholic","tagRecipe","arrayObject","Object","entries","arrayIngredients","filter","elem","includes","arrayMeasurements","SIZE","length","map"],"mappings":"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","sourcesContent":["const start = 0;\nconst end = 12;\n\nexport const fetchAllRecipes = async (searcher = '', category = '', type) => {\n  const URL_BASE = type === 'i'\n    ? 'https://www.themealdb.com/api/json/v1/1/filter.php?'\n    : 'https://www.themealdb.com/api/json/v1/1/search.php?';\n  const URL_ALL = `${URL_BASE}${type}=${searcher}`;\n  const URL_CATEGORY = `https://www.themealdb.com/api/json/v1/1/filter.php?c=${category}`;\n\n  const URL = category === '' ? URL_ALL : URL_CATEGORY;\n  const resolve = await fetch(URL);\n\n  const resolveJson = await resolve.json();\n\n  if (!resolveJson.meals) {\n    return [];\n  }\n\n  const limitArray = resolveJson.meals.slice(start, end);\n\n  return limitArray;\n};\n\nexport const fetchCategoriesMeals = async () => {\n  const sizeInit = 0;\n  const sizeEnd = 5;\n\n  const URL = 'https://www.themealdb.com/api/json/v1/1/list.php?c=list';\n  const resolve = await fetch(URL);\n\n  const resolveJson = await resolve.json();\n\n  const limitArray = resolveJson.meals.slice(sizeInit, sizeEnd);\n\n  return limitArray;\n};\n\nexport const singleMeal = async (idMeal) => {\n  const URL = `https://www.themealdb.com/api/json/v1/1/lookup.php?i=${idMeal}`;\n  const resolve = await fetch(URL);\n\n  const resolveJson = await resolve.json();\n  const tags = resolveJson.meals[0].strTags === null\n    ? []\n    : resolveJson.meals[0].strTags.split(',');\n\n  const objectModel = {\n    idRecipe: resolveJson.meals[0].idMeal,\n    nameRecipe: resolveJson.meals[0].strMeal,\n    imgRecipe: resolveJson.meals[0].strMealThumb,\n    instructionRecipe: resolveJson.meals[0].strInstructions,\n    categoryRecipe: resolveJson.meals[0].strCategory,\n    ingredients: [],\n    measurements: [],\n    quantityIngredients: 0,\n    areaRecipe: resolveJson.meals[0].strArea,\n    typeRecipe: 'comida',\n    alcoholic: '',\n    tagRecipe: tags,\n  };\n\n  const arrayObject = Object.entries(resolveJson.meals[0]);\n  const arrayIngredients = arrayObject.filter(\n    (elem) => elem[0].includes('strIngredient')\n      && elem[1] !== ''\n      && elem[1] !== ' '\n      && elem[1] !== null,\n  );\n\n  const arrayMeasurements = arrayObject.filter((elem) => elem[0].includes('strMeasure'));\n  const SIZE = arrayIngredients.length;\n\n  objectModel.ingredients = arrayIngredients\n    .slice(start, SIZE)\n    .map((elem) => [elem[1], false]);\n  objectModel.measurements = arrayMeasurements\n    .slice(start, SIZE)\n    .map((elem) => elem[1]);\n  objectModel.quantityIngredients = SIZE;\n\n  return objectModel;\n};\n"]},"metadata":{},"sourceType":"module"}