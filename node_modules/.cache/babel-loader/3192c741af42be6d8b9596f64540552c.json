{"ast":null,"code":"var _jsxFileName = \"/home/lennon/Documentos/Programa\\xE7\\xE3o/APP-RECEITAS/sd-07-project-recipes-app/src/Components/CategoryList/index.jsx\";\nimport React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesCocktails } from '../../API/apiCocktails';\nimport RecipeContext from '../../Context/RecipeContext';\nimport { fetchCategoriesMeals } from '../../API/apiMeals';\nimport './style.css';\n\nconst CategoryList = props => {\n  const {\n    page\n  } = props;\n  const {\n    dispatch\n  } = useContext(RecipeContext);\n  const {\n    state: {\n      mealsCategory,\n      cocktailsCategory\n    }\n  } = useContext(RecipeContext);\n  const {\n    state: {\n      search: {\n        categoryFilterDrinks,\n        categoryFilterMeals\n      }\n    }\n  } = useContext(RecipeContext);\n  useEffect(() => {\n    fetchCategoriesMeals().then(arrayLimit => dispatch({\n      type: 'SET_CATEGORIES_MEALS',\n      data: arrayLimit\n    }));\n    fetchCategoriesCocktails().then(arrayLimit => dispatch({\n      type: 'SET_CATEGORIES_COCKTAILS',\n      data: arrayLimit\n    }));\n  }, [dispatch]);\n\n  const handleCategoryDrinks = ({\n    target\n  }) => {\n    const {\n      name\n    } = target;\n\n    if (name === categoryFilterDrinks) {\n      dispatch({\n        type: 'SET_FILTER_CATEGORY_DRINKS',\n        categoryName: ''\n      });\n    } else {\n      dispatch({\n        type: 'SET_FILTER_CATEGORY_DRINKS',\n        categoryName: name\n      });\n    }\n  };\n\n  const handleCategoryMeals = ({\n    target\n  }) => {\n    const {\n      name\n    } = target;\n\n    if (name === categoryFilterMeals) {\n      dispatch({\n        type: 'SET_FILTER_CATEGORY_MEALS',\n        categoryName: ''\n      });\n    } else {\n      dispatch({\n        type: 'SET_FILTER_CATEGORY_MEALS',\n        categoryName: name\n      });\n    }\n  };\n\n  const mealsCategoriesDoc = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, mealsCategory.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    name: strCategory,\n    key: strCategory,\n    type: \"button\",\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: handleCategoryMeals,\n    className: \"btn-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, strCategory)), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"All\",\n    className: \"btn-filter\",\n    key: \"All\",\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => dispatch({\n      type: 'SET_FILTER_CATEGORY_MEALS',\n      categoryName: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"All\"));\n\n  const cocktailsCategoriesDoc = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"category-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, cocktailsCategory.map(({\n    strCategory\n  }) => /*#__PURE__*/React.createElement(\"button\", {\n    name: strCategory,\n    key: strCategory,\n    type: \"button\",\n    \"data-testid\": `${strCategory}-category-filter`,\n    onClick: handleCategoryDrinks,\n    className: \"btn-filter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, strCategory)), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"All\",\n    className: \"btn-filter\",\n    key: \"All\",\n    type: \"button\",\n    \"data-testid\": \"All-category-filter\",\n    onClick: () => dispatch({\n      type: 'SET_FILTER_CATEGORY_DRINKS',\n      categoryName: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"All\"));\n\n  return page === 'comidas' ? mealsCategoriesDoc() : cocktailsCategoriesDoc();\n};\n\nexport default CategoryList;\nCategoryList.propTypes = {\n  page: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/APP-RECEITAS/sd-07-project-recipes-app/src/Components/CategoryList/index.jsx"],"names":["React","useContext","useEffect","PropTypes","fetchCategoriesCocktails","RecipeContext","fetchCategoriesMeals","CategoryList","props","page","dispatch","state","mealsCategory","cocktailsCategory","search","categoryFilterDrinks","categoryFilterMeals","then","arrayLimit","type","data","handleCategoryDrinks","target","name","categoryName","handleCategoryMeals","mealsCategoriesDoc","map","strCategory","cocktailsCategoriesDoc","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchCategoriesCocktails } from '../../API/apiCocktails';\nimport RecipeContext from '../../Context/RecipeContext';\nimport { fetchCategoriesMeals } from '../../API/apiMeals';\nimport './style.css';\n\nconst CategoryList = (props) => {\n  const { page } = props;\n  const { dispatch } = useContext(RecipeContext);\n  const {\n    state: { mealsCategory, cocktailsCategory },\n  } = useContext(RecipeContext);\n  const {\n    state: {\n      search: { categoryFilterDrinks, categoryFilterMeals },\n    },\n  } = useContext(RecipeContext);\n\n  useEffect(() => {\n    fetchCategoriesMeals().then((arrayLimit) => dispatch({\n      type: 'SET_CATEGORIES_MEALS',\n      data: arrayLimit,\n    }));\n    fetchCategoriesCocktails().then((arrayLimit) => dispatch({\n      type: 'SET_CATEGORIES_COCKTAILS',\n      data: arrayLimit,\n    }));\n  }, [dispatch]);\n\n  const handleCategoryDrinks = ({ target }) => {\n    const { name } = target;\n    if (name === categoryFilterDrinks) {\n      dispatch({ type: 'SET_FILTER_CATEGORY_DRINKS', categoryName: '' });\n    } else {\n      dispatch({ type: 'SET_FILTER_CATEGORY_DRINKS', categoryName: name });\n    }\n  };\n\n  const handleCategoryMeals = ({ target }) => {\n    const { name } = target;\n    if (name === categoryFilterMeals) {\n      dispatch({ type: 'SET_FILTER_CATEGORY_MEALS', categoryName: '' });\n    } else {\n      dispatch({ type: 'SET_FILTER_CATEGORY_MEALS', categoryName: name });\n    }\n  };\n\n  const mealsCategoriesDoc = () => (\n    <div className=\"category-filter\">\n      {mealsCategory.map(({ strCategory }) => (\n        <button\n          name={ strCategory }\n          key={ strCategory }\n          type=\"button\"\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ handleCategoryMeals }\n          className=\"btn-filter\"\n        >\n          {strCategory}\n        </button>\n      ))}\n      <button\n        name=\"All\"\n        className=\"btn-filter\"\n        key=\"All\"\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => dispatch({\n          type: 'SET_FILTER_CATEGORY_MEALS',\n          categoryName: '' }) }\n      >\n        All\n      </button>\n    </div>\n  );\n\n  const cocktailsCategoriesDoc = () => (\n    <div className=\"category-filter\">\n      {cocktailsCategory.map(({ strCategory }) => (\n        <button\n          name={ strCategory }\n          key={ strCategory }\n          type=\"button\"\n          data-testid={ `${strCategory}-category-filter` }\n          onClick={ handleCategoryDrinks }\n          className=\"btn-filter\"\n        >\n          {strCategory}\n        </button>\n      ))}\n      <button\n        name=\"All\"\n        className=\"btn-filter\"\n        key=\"All\"\n        type=\"button\"\n        data-testid=\"All-category-filter\"\n        onClick={ () => dispatch({\n          type: 'SET_FILTER_CATEGORY_DRINKS',\n          categoryName: '' }) }\n      >\n        All\n      </button>\n    </div>\n  );\n\n  return page === 'comidas' ? mealsCategoriesDoc() : cocktailsCategoriesDoc();\n};\n\nexport default CategoryList;\n\nCategoryList.propTypes = {\n  page: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}